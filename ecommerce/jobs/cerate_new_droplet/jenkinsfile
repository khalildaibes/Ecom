pipeline {
    agent any
    environment {
        LANG = 'en_US.UTF-8'
        LC_ALL = 'en_US.UTF-8'
        PYTHON_PATH = '/path/to/python3'
        PYTHON_SCRIPT = "${WORKSPACE}/ecommerce/jobs/cerate_new_droplet/cerate_new_droplet.py"
        WORKSPACE = "${WORKSPACE}"
    }
    parameters {
        string(name: 'project_name', defaultValue: 'MyProject', description: 'Name of the project')
        choice(name: 'region', choices: ['New York', 'San Francisco', 'Amsterdam', 'Singapore', 'London', 'Frankfurt', 'Toronto', 'Bangalore', 'Sydney'], description: 'Choose Region')
        string(name: 'droplet_name', defaultValue: 'example1', description: 'Name of the Droplet')
        string(name: 'droplet_size', defaultValue: 's-2vcpu-2gb', description: 'Size of the Droplet')
        string(name: 'image', defaultValue: 'ubuntu-20-04-x64', description: 'Operating system image for the Droplet')
    }
    stages {
        stage('Execute Python Script') {
            steps {
                withCredentials([
                    string(credentialsId: 'github-pat', variable: 'GITHUB_TOKEN'),
                    string(credentialsId: 'sanityadmintoken', variable: 'SANITY_AUTH_TOKEN'),
                    string(credentialsId: 'openaikey', variable: 'OPEN_AI_KEY'),
                    string(credentialsId: 'VercelToken', variable: 'VERCEL_TOKEN'),
                    string(credentialsId: 'digitalOceanToken', variable: 'DIGITAL_OCEAN_TOKEN'),
                    string(credentialsId: 'JENKINS_API_TOKEN', variable: 'JENKINS_TOKEN'),
                ]) {
                    script {
                        // Call the Python script to execute tasks
                        bat """python ${PYTHON_SCRIPT} ^
                        --project_name "${params.project_name}" ^
                        --region "${params.region}" ^
                        --droplet_name "${params.droplet_name}" ^
                        --droplet_size "${params.droplet_size}" ^
                        --image "${params.image}"
                        """
                    }
                }
            }
        }
    }
}
