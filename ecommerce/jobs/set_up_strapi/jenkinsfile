pipeline {
    agent any
    parameters {
        string(name: 'location_in_waze', defaultValue: '', description: 'Enter Waze location (optional)', trim: true)
        file(name: 'css_file', description: 'Upload the CSS file (optional)')
        file(name: 'banner_photo', description: 'Upload the banner photo (optional)')
        string(name: 'email', defaultValue: 'khalildaibes1@gmail.com', description: 'Enter your email')
        string(name: 'password', defaultValue: 'KHALIL123er', description: 'Enter your password')
        string(name: 'new_business_name', defaultValue: 'Khalil_website_builder', description: 'Enter the new business name')
        string(name: 'new_branch_name', defaultValue: 'Khalil_website_builder', description: 'Enter the new branch name')
        text(name: 'small_description', defaultValue: 'Khalil_website_builder', description: 'Enter a small description of the business')
        string(name: 'Template_ID', defaultValue: 'template_1_standard', description: 'Template ID')
        string(name: 'categories', defaultValue: 'ecommerce, menu, clothes e-commerce, landing pages', description: 'Enter categories (comma-separated list)')
        string(name: 'logo_file', defaultValue: 'null', description: 'Path to the logo image file (optional)')
        string(name: 'phone', defaultValue: '0509977084', description: 'Enter the business phone number')
        string(name: 'address', defaultValue: 'nahef aleaen st0 , zip 2013700, box 3837', description: 'Enter the business address')
        choice(name: 'db_selected', choices: ['Sanity', 'Stripe'], description: 'Choose Database')
        string(name: 'products_file', defaultValue: 'null', description: 'Path to the products file (optional)')
        string(name: 'customer_config_file_path',  defaultValue: 'null', description: 'Path to the customer_config_file_path (required)')
    }
    environment {
        LANG = 'en_US.UTF-8'
        LC_ALL = 'en_US.UTF-8'
        PYTHON_SCRIPT = "${WORKSPACE}/ecommerce/jobs/set_up_strapi/set_up_strapi.py"
    }
    stages {
        stage('Check Python Environment') {
            steps {
                bat 'where python'
                bat 'python --version'
                bat 'pip list'
            }
        }
        stage('Install Python Libraries') {
            steps {
                bat 'python --version'
                bat 'pip install python-jenkins'
            }
        }
        stage('Setup') {
            steps {
                echo 'Setting up the environment'
                echo "Email: ${params.email}"
                echo "New Business Name: ${params.new_business_name}"
                echo "New Branch Name: ${params.new_branch_name}"
                echo "Small Description: ${params.small_description}"
                echo "Template ID: ${params.Template_ID}"
                echo "Categories: ${params.categories}"
                echo "Phone: ${params.phone}"
                echo "Address: ${params.address}"
                echo "DB Selected: ${params.db_selected}"
                echo "Customer Config File Path: ${params.customer_config_file_path}"
            }
        }
        stage('Run Python Script') {
            steps {
                withCredentials([
                    string(credentialsId: 'github-pat', variable: 'GITHUB_TOKEN'),
                    string(credentialsId: 'sanityadmintoken', variable: 'SANITY_AUTH_TOKEN'),
                    string(credentialsId: 'openaikey', variable: 'OPEN_AI_KEY'),
                    string(credentialsId: 'VercelToken', variable: 'VERCEL_TOKEN'),
                    string(credentialsId: 'JENKINS_API_TOKEN', variable: 'JENKINS_TOKEN')
                ]) {
                    withEnv(["WORKSPACE=${env.WORKSPACE}"]) {

                       echo "Using GITHUB_TOKEN: ${env.GITHUB_TOKEN}"

                        echo 'Running Python script...'
                        script {
                            if (isUnix()) {
                                sh """
                                    python3 ${PYTHON_SCRIPT} \
                                    --email "${params.email}" \
                                    --password "${params.password}" \
                                    --new_branch_name "${params.new_branch_name}" \
                                    --new_business_name "${params.new_business_name}" \
                                    --small_description "${params.small_description}" \
                                    --Template_ID "${params.Template_ID}" \
                                    --categories "${params.categories}" \
                                    --phone "${params.phone}" \
                                    --address "${params.address}" \
                                    --db_selected ${params.db_selected} \
                                    --customer_config_file_path "${params.customer_config_file_path}" \
                                    --products_file ${params.products_file ?: 'null'} \
                                    --logo_file ${params.logo_file ?: 'null'} \
                                    --css_file ${params.css_file ?: 'null'} \
                                    --banner_photo ${params.banner_photo ?: 'null'}
                                """
                            } else {
                                bat """
                                    python ${PYTHON_SCRIPT} ^
                                    --email "${params.email}" ^
                                    --password "${params.password}" ^
                                    --new_branch_name "${params.new_branch_name}" ^
                                    --new_business_name "${params.new_business_name}" ^
                                    --small_description "${params.small_description}" ^
                                    --Template_ID "${params.Template_ID}" ^
                                    --categories "${params.categories}" ^
                                    --phone "${params.phone}" ^
                                    --address "${params.address}" ^
                                    --db_selected ${params.db_selected} ^
                                    --customer_config_file_path "${params.customer_config_file_path}" ^
                                    --products_file ${params.products_file ?: 'null'} ^
                                    --logo_file ${params.logo_file ?: 'null'} ^
                                    --css_file ${params.css_file ?: 'null'} ^
                                    --banner_photo ${params.banner_photo ?: 'null'}
                                """
                            }
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline execution finished.'
        }
        failure {
            echo 'Pipeline failed!'
        }
        success {
            echo 'Pipeline succeeded!'
        }
    }
}
